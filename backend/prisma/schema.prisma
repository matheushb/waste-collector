// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  name            String?
  email           String           @unique
  password        String
  role            Role             @default(USER)
  points          Int              @default(0)
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  collections     WasteCollection[]
  rewards         Reward[]
}

enum Role {
  ADMIN
  USER
}

model WasteType {
  id          String           @id @default(cuid())
  name        String
  description String
  points      Int              @default(1)
  created_at  DateTime         @default(now())
  updated_at  DateTime         @updatedAt
  collections WasteCollection[]
}

model WasteCollection {
  id          String     @id @default(cuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  wasteType   WasteType  @relation(fields: [wasteTypeId], references: [id])
  wasteTypeId String
  weight      Float
  points      Int
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Reward {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String
  pointsCost  Int
  isRedeemed  Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}
